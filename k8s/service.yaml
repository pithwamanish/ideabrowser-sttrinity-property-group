# MongoDB Service
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  namespace: ideaboard
  labels:
    app: mongodb
spec:
  type: ClusterIP
  selector:
    app: mongodb
  ports:
  - name: mongodb
    port: 27017
    targetPort: 27017
    protocol: TCP

---
# Backend Service
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: ideaboard
  labels:
    app: backend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb  # For AWS
spec:
  type: ClusterIP
  selector:
    app: backend
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  sessionAffinity: None

---
# Frontend Service
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: ideaboard
  labels:
    app: frontend
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  sessionAffinity: None

---
# Backend LoadBalancer Service (Alternative for direct backend access)
apiVersion: v1
kind: Service
metadata:
  name: backend-loadbalancer
  namespace: ideaboard
  labels:
    app: backend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
spec:
  type: LoadBalancer
  selector:
    app: backend
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  loadBalancerSourceRanges:
  - 0.0.0.0/0  # Restrict this in production

---
# Frontend LoadBalancer Service (Alternative for direct frontend access)
apiVersion: v1
kind: Service
metadata:
  name: frontend-loadbalancer
  namespace: ideaboard
  labels:
    app: frontend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  loadBalancerSourceRanges:
  - 0.0.0.0/0  # Restrict this in production
